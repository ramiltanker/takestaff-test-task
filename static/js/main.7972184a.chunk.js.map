{"version":3,"sources":["components/Card/Card.module.css","pages/SignIn/SignIn.module.css","components/InputString/InputString.module.css","components/AddNewContactForm/AddNewContactForm.module.css","pages/Contacts/Contacts.module.css","components/NavMenu/NavMenu.module.css","components/SearchForm/SearchForm.module.css","components/Header/Header.module.css","utils/fakeRequest.ts","utils/axios.ts","mock/mock.ts","api/login.ts","redux/actions/auth.tsx","redux/reducers/auth.ts","redux/reducers/rootReducer.ts","redux/store.tsx","redux/typedHooks.ts","customHooks/FormValidation.tsx","components/InputString/InputString.tsx","components/Button/Button.tsx","components/Loader/Loader.tsx","pages/SignIn/SignIn.tsx","components/AddNewContactForm/AddNewContactForm.tsx","components/Card/Card.tsx","components/SearchForm/SearchForm.tsx","pages/Contacts/Contacts.tsx","components/NavMenu/NavMenu.tsx","components/Header/Header.tsx","components/ProtectedAuthorized/ProtectedAuthorized.tsx","components/ProtectedRoute/ProtectedRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","fakeRequest","time","Promise","res","setTimeout","axiosInstance","axios","create","interceptors","response","use","error","reject","data","axiosMockAdapter","AxiosMockAdapter","delayResponse","users","id","uuidv4","email","password","mock","onPost","reply","config","a","JSON","parse","user","find","message","console","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAILED","initialState","isLogged","isLoading","undefined","signInRequest","signInSuccess","signInFailed","rootReducer","combineReducers","auth","state","action","type","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","useSelector","selectorHook","useFormWithValidation","React","useState","values","setValues","errors","setErrors","isValid","setIsValid","isDirty","setIsDirty","isEmail","setIsEmail","re","resetForm","useCallback","newValues","newErrors","newIsValid","newIsDirty","newEmail","handleChange","event","target","name","value","validationMessage","checkValidity","test","String","toLowerCase","Input","styled","input","props","width","style","marginRight","InputString","inputName","inputType","inputId","labelText","inputWidth","inputValue","onChange","className","styles","input_box","label","ButtonStyled","button","height","alignSelf","marginLeft","marginTop","marginBottom","Button","text","isButtonDisabled","disabled","Loader","isLoaderActive","preloaderRef","createRef","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","classNames","nodeRef","appear","ref","SignIn","dispatch","dispatchHook","sign_in","form","onSubmit","e","preventDefault","post","status","handleSignIn","AddNewContactForm","handleAddNewContact","address","phone","container","newContact","Card","handleDeleteContact","handleSaveNewContact","isInputDisabled","setIsInputDisabled","nameInput","emailInput","addressInput","phoneInput","useEffect","card","button_save","button_delete","onClick","button_edit","SearchForm","handleSearchContact","searchInput","Contacts","contacts","setContacts","renderContacts","setRenderContacts","contact","newArr","push","length","word","filteredContacts","filter","obj","Object","some","val","toUpperCase","includes","map","NavMenu","nav_menu","to","link","Header","header","ProtectedAuthorized","children","rest","isUser","render","ProtectedRoute","location","pathname","from","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7972184a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2wEBH\",\"form\":\"Card_form__1uz7z\",\"input\":\"Card_input__3msgj\",\"button\":\"Card_button__AKbL-\",\"button_delete\":\"Card_button_delete__2rWE9 Card_button__AKbL-\",\"button_edit\":\"Card_button_edit__3Vief Card_button__AKbL-\",\"button_save\":\"Card_button_save__3irzd Card_button__AKbL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign_in\":\"SignIn_sign_in__3WeGQ\",\"form\":\"SignIn_form__2AdoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_box\":\"InputString_input_box__rHA7o\",\"label\":\"InputString_label__3UitT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddNewContactForm_container__1IAUz\",\"form\":\"AddNewContactForm_form__F_pl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__32o06\",\"container\":\"Contacts_container__35d9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_menu\":\"NavMenu_nav_menu__2CviM\",\"link\":\"NavMenu_link__39Egp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__1CaJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pkD5\"};","export default function fakeRequest(time: number) {\r\n  return new Promise((res) => setTimeout(res, time));\r\n}\r\n","import axios from \"axios\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst axiosInstance = axios.create();\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) =>\r\n    Promise.reject(\r\n      (error.response && error.response.data) || \"Something went wrong\"\r\n    )\r\n);\r\n\r\nexport default axiosInstance;\r\n","import AxiosMockAdapter from 'axios-mock-adapter';\r\n// utils\r\nimport axios from '../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst axiosMockAdapter = new AxiosMockAdapter(axios, {\r\n  delayResponse: 0\r\n});\r\n\r\nexport default axiosMockAdapter;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n// utils\r\nimport fakeRequest from \"../utils/fakeRequest\";\r\n//\r\nimport mock from \"../mock/mock\";\r\n\r\nconst users = [\r\n  {\r\n    id: uuidv4(),\r\n    email: \"test@mail.ru\",\r\n    password: \"12345\",\r\n  },\r\n];\r\n\r\nmock.onPost(\"/api/auth/login\").reply(async (config) => {\r\n  try {\r\n    await fakeRequest(1000);\r\n\r\n    const { email, password } = JSON.parse(config.data);\r\n    const user = users.find((user) => user.email === email);\r\n\r\n    if (!user) {\r\n      return [400, { message: \"Пользователь с данным email не найден\" }];\r\n    }\r\n\r\n    if (user.password !== password) {\r\n      return [400, { message: \"Неверный пароль\" }];\r\n    }\r\n\r\n    return [200, { user }];\r\n  } catch (error) {\r\n    console.error(error);\r\n    return [500, { message: \"Ошибка на сервере\" }];\r\n  }\r\n});\r\n","import { AppThunk } from \"../types\";\r\nimport { TUser } from \"../types/auth\";\r\nimport axios from \"../../utils/axios\";\r\n\r\nexport const USER_SIGNIN_REQUEST: \"USER_SIGNIN_REQUEST\" = \"USER_SIGNIN_REQUEST\";\r\nexport const USER_SIGNIN_SUCCESS: \"USER_SIGNIN_SUCCESS\" = \"USER_SIGNIN_SUCCESS\";\r\nexport const USER_SIGNIN_FAILED: \"USER_SIGNIN_FAILED\" = \"USER_SIGNIN_FAILED\";\r\n\r\ninterface IUserSignInRequest {\r\n  readonly type: typeof USER_SIGNIN_REQUEST;\r\n}\r\n\r\ninterface IUserSignInSuccess {\r\n  readonly type: typeof USER_SIGNIN_SUCCESS;\r\n  user: TUser;\r\n}\r\n\r\ninterface IUserSignInFailed {\r\n  readonly type: typeof USER_SIGNIN_FAILED;\r\n}\r\n\r\nexport type TAuthActions =\r\n  | IUserSignInRequest\r\n  | IUserSignInSuccess\r\n  | IUserSignInFailed;\r\n\r\nexport const handleSignIn: AppThunk = (email, password) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: USER_SIGNIN_REQUEST,\r\n    });\r\n    try {\r\n      const response = await axios.post(\"/api/auth/login\", { email, password });\r\n      if (response.status === 200) {\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, user: response.data });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: USER_SIGNIN_FAILED });\r\n    }\r\n  };\r\n};\r\n","import {\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAILED,\r\n} from \"../actions/auth\";\r\n\r\n// Types\r\nimport { TUser } from \"../types/auth\";\r\n// Types\r\n\r\n// Union тип\r\nimport { TAuthActions } from \"../actions/auth\";\r\n// Union тип\r\n\r\ntype TAuthReducer = {\r\n  isLogged: boolean;\r\n  isLoading: boolean;\r\n  user?: TUser;\r\n  signInRequest: boolean;\r\n  signInSuccess: boolean;\r\n  signInFailed: boolean;\r\n};\r\n\r\nexport const initialState: TAuthReducer = {\r\n  isLogged: false,\r\n  isLoading: false,\r\n  user: undefined,\r\n  signInRequest: false,\r\n  signInSuccess: false,\r\n  signInFailed: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action: TAuthActions) => {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case USER_SIGNIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLogged: false,\r\n        isLoading: true,\r\n        signInRequest: true,\r\n        signInSuccess: false,\r\n        signInFailed: false,\r\n      };\r\n    }\r\n\r\n    case USER_SIGNIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLogged: true,\r\n        isLoading: false,\r\n        user: action.user,\r\n        signInRequest: false,\r\n        signInSuccess: true,\r\n        signInFailed: false,\r\n      };\r\n    }\r\n\r\n    case USER_SIGNIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLogged: false,\r\n        isLoading: false,\r\n        signInRequest: false,\r\n        signInSuccess: false,\r\n        signInFailed: true,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { authReducer } from \"./auth\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n});\r\n","import { rootReducer } from \"./reducers/rootReducer\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import {\n  TypedUseSelectorHook,\n  useSelector as selectorHook,\n  useDispatch as dispatchHook,\n} from \"react-redux\";\nimport { RootState, AppThunk, AppDispatch } from \"./types\";\n\n// Теперь этот хук «знает» структуру хранилища\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n// Хук не даст отправить экшен, который ему не знаком\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\n","import React, { useCallback } from \"react\";\n\ntype TValues = {\n  [key: string]: string;\n};\n\n//хук управления формой и валидации формы\nexport function useFormWithValidation() {\n  const [values, setValues] = React.useState<TValues>({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setIsValid] = React.useState(false);\n\n  const [isDirty, setIsDirty] = React.useState(false);\n  const [isEmail, setIsEmail] = React.useState(false);\n\n  const re =\n    /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target;\n    const name: string = target.name;\n    const value: string = target.value;\n    setValues({ ...values, [name]: value });\n    setErrors({ ...errors, [name]: target.validationMessage });\n    setIsValid(target.checkValidity());\n\n    value ? setIsDirty(false) : setIsDirty(true);\n    name === \"mail\" && re.test(String(value).toLowerCase())\n      ? setIsEmail(true)\n      : setIsEmail(false);\n  };\n\n  const resetForm = useCallback(\n    (\n      newValues = {},\n      newErrors = {},\n      newIsValid = false,\n      newIsDirty = false,\n      newEmail = false\n    ) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n      setIsDirty(newIsDirty);\n      setIsEmail(newEmail);\n    },\n    [setValues, setErrors, setIsValid, setIsDirty, setIsEmail]\n  );\n\n  return { values, handleChange, errors, isValid, resetForm, isDirty, isEmail };\n}\n","import React from \"react\";\r\n\r\nimport { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styles\r\nimport styles from \"./InputString.module.css\";\r\n// Styles\r\n\r\ninterface IInputString {\r\n  inputName: string;\r\n  inputType: \"text\" | \"email\";\r\n  inputValue?: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  inputId: string;\r\n  labelText: string;\r\n  inputWidth?: string | number | undefined;\r\n  marginRight?: string | number | undefined;\r\n}\r\n\r\ntype FC<P = IInputString> = FunctionComponent<P>;\r\n\r\nconst Input = styled.input`\r\n  width: ${(props) => props.width};\r\n  height: 60px;\r\n  background: #ffffff;\r\n  border: 1px solid #f1f1f1;\r\n  border-radius: 4px;\r\n\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding-left: 16px;\r\n  padding-top: 5px;\r\n  margin-right: ${(props) => props.style?.marginRight};\r\n  &:focus,\r\n  &:hover {\r\n    border-color: #01a7fd;\r\n    border-width: 2px;\r\n    outline-color: #01a7fd;\r\n  }\r\n`;\r\n\r\nconst InputString: FC<IInputString> = ({\r\n  inputName,\r\n  inputType,\r\n  inputId,\r\n  labelText,\r\n  inputWidth,\r\n  marginRight,\r\n  inputValue,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className={styles.input_box}>\r\n      <label className={styles.label}>{labelText}</label>\r\n      <Input\r\n        style={{ marginRight: marginRight }}\r\n        width={inputWidth}\r\n        type={inputType}\r\n        name={inputName}\r\n        value={inputValue}\r\n        onChange={onChange}\r\n        id={inputId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputString;\r\n","import { FunctionComponent } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\ninterface IButton {\r\n  text: string;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  marginRight?: string | number;\r\n  marginLeft?: string | number;\r\n  marginTop?: string | number;\r\n  marginBottom?: string | number;\r\n  alignSelf?: string;\r\n  isButtonDisabled?: boolean;\r\n}\r\n\r\ntype FC<P> = FunctionComponent<P>;\r\n\r\nconst ButtonStyled = styled.button`\r\n  width: ${(props) => props.style?.width};\r\n  height: ${(props) => props.style?.height};\r\n  background: #01a7fd;\r\n  border-radius: 100px;\r\n  border-style: none;\r\n  cursor: pointer;\r\n  opacity: 1;\r\n  transition: opacity 0.3s linear;\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  color: #ffffff;\r\n  align-self: ${(props) => props.style?.alignSelf};\r\n  margin-right: ${(props) => props.style?.marginRight};\r\n  margin-left: ${(props) => props.style?.marginLeft};\r\n  margin-top: ${(props) => props.style?.marginTop};\r\n  margin-bottom: ${(props) => props.style?.marginBottom};\r\n  &:hover {\r\n    opacity: 0.6;\r\n    transition: opacity 0.3s linear;\r\n  }\r\n  &:disabled,\r\n  &hover {\r\n    background-color: #cccccc;\r\n    cursor: not-allowed;\r\n    transition: none;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Button: FC<IButton> = ({\r\n  text,\r\n  width,\r\n  height,\r\n  marginRight,\r\n  marginLeft,\r\n  marginTop,\r\n  marginBottom,\r\n  alignSelf,\r\n  isButtonDisabled,\r\n}) => {\r\n  return (\r\n    <ButtonStyled\r\n      style={{\r\n        marginRight: marginRight,\r\n        marginLeft: marginLeft,\r\n        marginTop: marginTop,\r\n        marginBottom: marginBottom,\r\n        width: width,\r\n        height: height,\r\n        alignSelf: alignSelf,\r\n      }}\r\n      disabled={isButtonDisabled}\r\n    >\r\n      {text}\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n// Стили\r\nimport \"./Loader.css\";\r\n// Стили\r\n\r\nimport \"../../transition.css\";\r\n\r\ninterface ILoader {\r\n  isLoaderActive: boolean;\r\n}\r\n\r\ntype FC<P> = FunctionComponent<P>;\r\n\r\nconst Loader: FC<ILoader> = ({ isLoaderActive }) => {\r\n  const preloaderRef = React.createRef<HTMLDivElement>();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CSSTransition\r\n        in={isLoaderActive}\r\n        timeout={3000}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        classNames=\"loader\"\r\n        nodeRef={preloaderRef}\r\n        appear={true}\r\n      >\r\n        <div className=\"loader\" ref={preloaderRef}></div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","// Styles\r\nimport styles from \"./SignIn.module.css\";\r\n// Styles\r\n\r\n// Redux\r\nimport { handleSignIn } from \"../../redux/actions/auth\";\r\n\r\nimport { useDispatch, useSelector } from \"../../redux/typedHooks\";\r\n// Redux\r\n\r\n// Custom Hooks\r\nimport { useFormWithValidation } from \"../../customHooks/FormValidation\";\r\n// Custom Hooks\r\n\r\n// Components\r\nimport InputString from \"../../components/InputString/InputString\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n// Components\r\n\r\nconst SignIn = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const email = useFormWithValidation();\r\n  const password = useFormWithValidation();\r\n\r\n  const { isLogged, isLoading } = useSelector((store) => store.auth);\r\n\r\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (email.values.email && password.values.password) {\r\n      dispatch(handleSignIn(email.values.email, password.values.password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader isLoaderActive={isLoading} />}\r\n      <section className={styles.sign_in}>\r\n        <form className={styles.form} onSubmit={handleSubmitForm}>\r\n          <InputString\r\n            inputName=\"email\"\r\n            inputType=\"text\"\r\n            inputId=\"email\"\r\n            labelText=\"Email\"\r\n            inputWidth=\"500px\"\r\n            inputValue={email.values.email || \"\"}\r\n            onChange={email.handleChange}\r\n          />\r\n          <InputString\r\n            inputName=\"password\"\r\n            inputType=\"text\"\r\n            inputId=\"password\"\r\n            labelText=\"Password\"\r\n            inputWidth=\"500px\"\r\n            inputValue={password.values.password || \"\"}\r\n            onChange={password.handleChange}\r\n          />\r\n          <Button\r\n            text=\"Войти\"\r\n            width=\"200px\"\r\n            height=\"50px\"\r\n            marginTop=\"30px\"\r\n            alignSelf=\"flex-end\"\r\n          />\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Components\r\nimport InputString from \"../InputString/InputString\";\r\nimport Button from \"../Button/Button\";\r\n// Components\r\n\r\n// Styles\r\nimport styles from \"./AddNewContactForm.module.css\";\r\n// Styles\r\n\r\n// Custom Hooks\r\nimport { useFormWithValidation } from \"../../customHooks/FormValidation\";\r\n// Custom Hooks\r\n\r\n// Types\r\nimport { TUser } from \"../../types/contacts\";\r\n// Types\r\n\r\ninterface IAddNewContactForm {\r\n  handleAddNewContact: (contact: TUser) => void;\r\n}\r\n\r\ntype FC<P> = FunctionComponent<P>;\r\n\r\nconst AddNewContactForm: FC<IAddNewContactForm> = ({ handleAddNewContact }) => {\r\n  const name = useFormWithValidation();\r\n  const email = useFormWithValidation();\r\n  const address = useFormWithValidation();\r\n  const phone = useFormWithValidation();\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      name.values.name &&\r\n      email.values.email &&\r\n      address.values.address &&\r\n      phone.values.phone\r\n    ) {\r\n      const newContact = {\r\n        id: uuidv4(),\r\n        name: name.values.name,\r\n        email: email.values.email,\r\n        address: address.values.address,\r\n        phone: phone.values.phone,\r\n      };\r\n      handleAddNewContact(newContact);\r\n      name.values.name = \"\";\r\n      email.values.email = \"\";\r\n      address.values.address = \"\";\r\n      phone.values.phone = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <InputString\r\n          inputName=\"name\"\r\n          inputType=\"text\"\r\n          inputId=\"name\"\r\n          labelText=\"Имя\"\r\n          inputWidth=\"600px\"\r\n          inputValue={name.values.name || \"\"}\r\n          onChange={name.handleChange}\r\n        />\r\n        <InputString\r\n          inputName=\"email\"\r\n          inputType=\"email\"\r\n          inputId=\"email\"\r\n          labelText=\"Email\"\r\n          inputWidth=\"600px\"\r\n          inputValue={email.values.email || \"\"}\r\n          onChange={email.handleChange}\r\n        />\r\n        <InputString\r\n          inputName=\"address\"\r\n          inputType=\"text\"\r\n          inputId=\"address\"\r\n          labelText=\"Address\"\r\n          inputWidth=\"600px\"\r\n          inputValue={address.values.address || \"\"}\r\n          onChange={address.handleChange}\r\n        />\r\n        <InputString\r\n          inputName=\"phone\"\r\n          inputType=\"text\"\r\n          inputId=\"phone\"\r\n          labelText=\"Phone\"\r\n          inputWidth=\"600px\"\r\n          inputValue={phone.values.phone || \"\"}\r\n          onChange={phone.handleChange}\r\n        />\r\n        <Button\r\n          text=\"Добавить\"\r\n          width=\"200px\"\r\n          height=\"50px\"\r\n          marginTop=\"30px\"\r\n          alignSelf=\"flex-end\"\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddNewContactForm;\r\n","import React from \"react\";\r\n\r\nimport { FunctionComponent } from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./Card.module.css\";\r\n// Styles\r\n\r\n// Custom Hooks\r\nimport { useFormWithValidation } from \"../../customHooks/FormValidation\";\r\n// Custom Hooks\r\n\r\n// Types\r\nimport { TUser } from \"../../types/contacts\";\r\n// Types\r\n\r\ninterface ICard {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  address: string;\r\n  phone: string;\r\n  handleDeleteContact: (id: string) => void;\r\n  handleSaveNewContact: (newContact: TUser) => void;\r\n}\r\n\r\ntype FC<P> = FunctionComponent<P>;\r\n\r\nconst Card: FC<ICard> = ({\r\n  id,\r\n  name,\r\n  phone,\r\n  address,\r\n  email,\r\n  handleDeleteContact,\r\n  handleSaveNewContact,\r\n}) => {\r\n  const [isInputDisabled, setIsInputDisabled] = React.useState<boolean>(true);\r\n\r\n  const nameInput = useFormWithValidation();\r\n  const emailInput = useFormWithValidation();\r\n  const addressInput = useFormWithValidation();\r\n  const phoneInput = useFormWithValidation();\r\n\r\n  const handleEditContact = () => {\r\n    setIsInputDisabled(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (name && email && address && phone) {\r\n      nameInput.values.nameInput = name;\r\n      emailInput.values.emailInput = email;\r\n      addressInput.values.addressInput = address;\r\n      phoneInput.values.phoneInput = phone;\r\n    }\r\n  }, [name, email, address, phone]);\r\n\r\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      nameInput.values.nameInput !== name ||\r\n      emailInput.values.emailInput !== email ||\r\n      addressInput.values.addressInput !== address ||\r\n      phoneInput.values.phoneInput !== phone\r\n    ) {\r\n      const newContact = {\r\n        id: id,\r\n        name: nameInput.values.nameInput,\r\n        email: emailInput.values.emailInput,\r\n        address: addressInput.values.addressInput,\r\n        phone: phoneInput.values.phoneInput,\r\n      };\r\n      handleSaveNewContact(newContact);\r\n      setIsInputDisabled(true);\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <section className={styles.card}>\r\n      <form className={styles.form} onSubmit={handleSubmitForm}>\r\n        <input\r\n          className={styles.input}\r\n          name=\"nameInput\"\r\n          value={nameInput.values.nameInput || name || \"\"}\r\n          onChange={nameInput.handleChange}\r\n          type=\"text\"\r\n          disabled={isInputDisabled}\r\n        />\r\n        <input\r\n          className={styles.input}\r\n          name=\"emailInput\"\r\n          value={emailInput.values.emailInput || email || \"\"}\r\n          onChange={emailInput.handleChange}\r\n          type=\"email\"\r\n          disabled={isInputDisabled}\r\n        />\r\n        <input\r\n          className={styles.input}\r\n          name=\"addressInput\"\r\n          value={addressInput.values.addressInput || address || \"\"}\r\n          onChange={addressInput.handleChange}\r\n          type=\"text\"\r\n          disabled={isInputDisabled}\r\n        />\r\n        <input\r\n          className={styles.input}\r\n          name=\"phoneInput\"\r\n          value={phoneInput.values.phoneInput || phone || \"\"}\r\n          onChange={phoneInput.handleChange}\r\n          type=\"text\"\r\n          disabled={isInputDisabled}\r\n        />\r\n        <button className={styles.button_save} />\r\n      </form>\r\n      <button\r\n        className={styles.button_delete}\r\n        onClick={() => handleDeleteContact(id)}\r\n      />\r\n      <button className={styles.button_edit} onClick={handleEditContact} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { FunctionComponent } from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./SearchForm.module.css\";\r\n// Styles\r\n\r\n// Components\r\nimport InputString from \"../InputString/InputString\";\r\nimport Button from \"../Button/Button\";\r\n// Components\r\n\r\n// Custom Hook\r\nimport { useFormWithValidation } from \"../../customHooks/FormValidation\";\r\n// Custom Hook\r\n\r\ninterface ISearchForm {\r\n  handleSearchContact: (word: string) => void;\r\n}\r\n\r\ntype FC<P> = FunctionComponent<P>;\r\n\r\nconst SearchForm: FC<ISearchForm> = ({ handleSearchContact }) => {\r\n  const searchInput = useFormWithValidation();\r\n\r\n  const submitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    handleSearchContact(searchInput.values.searchInput);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={submitForm}>\r\n      <InputString\r\n        inputName=\"searchInput\"\r\n        inputType=\"text\"\r\n        inputId=\"searchInput\"\r\n        labelText=\"Search\"\r\n        inputWidth=\"800px\"\r\n        inputValue={searchInput.values.searchInput || \"\"}\r\n        onChange={searchInput.handleChange}\r\n      />\r\n      <Button\r\n        text=\"Найти\"\r\n        width=\"100px\"\r\n        height=\"50px\"\r\n        marginLeft=\"30px\"\r\n        alignSelf=\"center\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport AddNewContactForm from \"../../components/AddNewContactForm/AddNewContactForm\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport SearchForm from \"../../components/SearchForm/SearchForm\";\r\n// Components\r\n\r\n// Types\r\nimport { TUser, TContacts } from \"../../types/contacts\";\r\n// Types\r\n\r\n// Styles\r\nimport styles from \"./Contacts.module.css\";\r\n// Styles\r\n\r\nconst Contacts = () => {\r\n  const [contacts, setContacts] = React.useState<TContacts>([]);\r\n  const [renderContacts, setRenderContacts] = React.useState<TContacts>([]);\r\n\r\n  const handleAddNewContact = (contact: TUser) => {\r\n    let newArr: TContacts = [];\r\n    newArr.push(contact);\r\n    setContacts([...contacts, ...newArr]);\r\n  };\r\n\r\n  const handleDeleteContact = (id: string) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  const handleSaveNewContact = (id: string, newContact: TUser) => {\r\n    let newArr: TContacts = [];\r\n    newArr = contacts.map((contact) => {\r\n      if (contact.id === id) {\r\n        return (contact = newContact);\r\n      }\r\n      return contact;\r\n    });\r\n    setContacts(newArr);\r\n  };\r\n\r\n  const handleSearchContact = (word: string) => {\r\n    const filteredContacts = contacts.filter((obj) =>\r\n      Object.values(obj).some((val) =>\r\n        val.toUpperCase().includes(word.toUpperCase())\r\n      )\r\n    );\r\n    setRenderContacts(filteredContacts);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setRenderContacts([...contacts]);\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <section className={styles.contacts}>\r\n      <AddNewContactForm handleAddNewContact={handleAddNewContact} />\r\n      {contacts.length > 0 && (\r\n        <SearchForm\r\n          handleSearchContact={(word: string) => handleSearchContact(word)}\r\n        />\r\n      )}\r\n      <div className={styles.container}>\r\n        {renderContacts.map((contact) => {\r\n          return (\r\n            <Card\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              phone={contact.phone}\r\n              address={contact.address}\r\n              email={contact.email}\r\n              handleDeleteContact={(id: string) => handleDeleteContact(id)}\r\n              handleSaveNewContact={(newContact: TUser) =>\r\n                handleSaveNewContact(contact.id, newContact)\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport styles from \"./NavMenu.module.css\";\r\n// Styles\r\n\r\nconst NavMenu = () => {\r\n  return (\r\n    <nav className={styles.nav_menu}>\r\n      <Link to=\"/contacts\" className={styles.link}>\r\n        Контакты\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","// Styles\r\nimport styles from \"./Header.module.css\";\r\n// Styles\r\n\r\n// Components\r\nimport NavMenu from \"../NavMenu/NavMenu\";\r\n// Components\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <NavMenu />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FunctionComponent, ReactNode } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Types\nimport { useSelector } from \"../../redux/typedHooks\";\n// Types\n\ninterface IProtectedAuthorizedProps {\n  children?: ReactNode;\n  path: string;\n}\n\ntype FC<P = {}> = FunctionComponent<P>;\nconst ProtectedAuthorized: FC<IProtectedAuthorizedProps> = ({\n  children,\n  ...rest\n}) => {\n  const { user } = useSelector((state) => state.auth);\n\n  const isUser = user && user.email !== \"\" && user.name !== \"\";\n\n  return (\n    <Route\n      {...rest}\n      render={() => (!isUser ? children : <Redirect to=\"/contacts\" />)}\n    />\n  );\n};\n\nexport default ProtectedAuthorized;\n","import { FunctionComponent, ReactNode } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useSelector } from \"../../redux/typedHooks\";\n\ninterface IProtectedRouteProps {\n  children?: ReactNode;\n  path: string;\n  exact: boolean;\n}\n\ntype FC<P = IProtectedRouteProps> = FunctionComponent<P>;\n\nexport const ProtectedRoute: FC<IProtectedRouteProps> = ({\n  children,\n  ...rest\n}) => {\n  const { isLogged } = useSelector((store) => store.auth);\n\n  if (!isLogged) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) => {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/sign-in\",\n                state: { from: location },\n              }}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return <Route {...rest}>{children}</Route>;\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\n// Pages\nimport SignIn from \"./pages/SignIn/SignIn\";\nimport Contacts from \"./pages/Contacts/Contacts\";\nimport Header from \"./components/Header/Header\";\nimport ProtectedAuthorized from \"./components/ProtectedAuthorized/ProtectedAuthorized\";\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\n// Pages\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <ProtectedAuthorized path=\"/sign-in\">\n          <SignIn />\n        </ProtectedAuthorized>\n        <ProtectedRoute path=\"/contacts\" exact>\n          <Contacts />\n        </ProtectedRoute>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./api/index\";\n\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\n\nimport { compose } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}